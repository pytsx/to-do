{"version":3,"sources":["../src/index.ts","../src/app.tsx","../src/const.tsx","../src/components/ui/iconify.tsx","../src/lib/utils.ts","../src/provider/global.tsx","../src/provider/theme.tsx","../src/reducer/global.snippets.ts","../src/reducer/global.ts","../src/components/global/list/list.content.tsx","../src/components/global/list/list.tsx","../src/components/global/list/sidebar.tsx","../src/components/ui/appbar.tsx","../src/components/ui/toolbar.tsx","../src/components/ui/stack.tsx","../src/components/ui/button.tsx","../src/components/ui/dropdown-menu.tsx","../src/components/ui/sonner.tsx","../src/components/ui/input.tsx","../src/components/ui/avatar.tsx","../src/components/global/perfil/Perfil.tsx","../src/components/ui/dialog.tsx","../src/components/global/sidebar.container.tsx","../src/components/global/list/add.list.tsx","../src/components/ui/scroll-area.tsx","../src/components/global/signout.tsx","../src/components/global/task/list.tsx","../src/components/global/task/add.task.tsx","../src/components/global/Editable.text.tsx","../src/components/ui/accordion.tsx","../src/components/global/task/container.tsx","../src/components/global/task/sidebar.tsx"],"sourcesContent":["export * from \"./app\"","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { ListSidebar } from \"./components\";\r\nimport { GlobalProvider } from \"./provider\";\r\nimport { TaskList, TaskSidebar } from \"./components/global/task\";\r\n\r\nconst TodoApp = React.forwardRef(({ }, ref) => {\r\n  return (\r\n    <GlobalProvider>\r\n      <section\r\n        className=\"flex bg-neutral-900\"\r\n      >\r\n        <ListSidebar />\r\n\r\n        <section className=\"w-full h-full flex flex-col \">\r\n          <div className={clsx(\"bg-neutral-950 w-full h-full select-none \")}>\r\n            <TaskList />\r\n          </div>\r\n        </section>\r\n        <TaskSidebar />\r\n      </section>\r\n    </GlobalProvider>\r\n  )\r\n})\r\n\r\nexport { TodoApp }","import {\r\n  Sun,\r\n  Star,\r\n  BookDashed,\r\n  LucideIcon,\r\n  PersonStanding,\r\n  Home,\r\n  Circle,\r\n  Table,\r\n  List\r\n} from \"lucide-react\"\r\n\r\nexport type IconName = \"sun\" | \"star\" | \"dashboard\" | \"person\" | \"home\" | \"list\" | \"task\"\r\nexport const icons: Record<IconName, LucideIcon> = {\r\n  sun: Sun,\r\n  star: Star,\r\n  dashboard: BookDashed,\r\n  person: PersonStanding,\r\n  home: Home,\r\n  list: List,\r\n  task: Circle\r\n}\r\n\r\nexport const Github = () => <svg\r\n  className=\"h-4 w-4 text-black dark:text-white\"\r\n  aria-hidden=\"true\"\r\n  fill=\"currentColor\"\r\n  viewBox=\"0 0 24 24\"\r\n>\r\n  <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n</svg>","import { IconName, icons } from \"../../const\"\r\nimport React from \"react\"\r\n\r\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<SVGSVGElement>, SVGSVGElement> {\r\n  iconName: IconName\r\n}\r\n\r\nconst Iconify = React.forwardRef<SVGSVGElement, Props>(({ iconName, ...props }, ref) => {\r\n  const Icon = icons[iconName]\r\n  return <Icon ref={ref} {...props} />\r\n})\r\n\r\n\r\nIconify.displayName = \"Iconify\"\r\n\r\nexport { Iconify }","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","\"use client\"\r\nimport React from \"react\"\r\nimport { Children } from \"@/utils/interface\"\r\nimport { ThemeProvider } from \"./theme\"\r\nimport { type GlobalActions, type GlobalState, globalReducer } from \"@/reducer\"\r\nimport { SessionProvider } from \"next-auth/react\"\r\nimport { v4 } from \"uuid\"\r\n\r\ninterface ContextProps {\r\n  globalState: GlobalState\r\n  globalDispatch: React.Dispatch<GlobalActions>\r\n}\r\n\r\nconst globalInitialState: GlobalState = {\r\n  lists: [\r\n    {\r\n      id: v4(),\r\n      name: \"meu dia\",\r\n      tasks: [],\r\n      metadata: {\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        tags: [],\r\n        icon: \"sun\",\r\n        color: \"#a0cbf1\",\r\n        author: \"system\"\r\n      }\r\n    },\r\n    {\r\n      id: v4(),\r\n      name: \"importante\",\r\n      tasks: [],\r\n      metadata: {\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        tags: [],\r\n        icon: \"star\",\r\n        color: \"#f5b6c2\",\r\n        author: \"system\"\r\n      }\r\n    },\r\n    {\r\n      id: v4(),\r\n      name: \"planejado\",\r\n      tasks: [],\r\n      metadata: {\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        tags: [],\r\n        icon: \"dashboard\",\r\n        color: \"#8bd3ce\",\r\n        author: \"system\"\r\n      }\r\n    },\r\n    {\r\n      id: v4(),\r\n      name: \"atribuido a mim\",\r\n      tasks: [],\r\n      metadata: {\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        tags: [],\r\n        icon: \"person\",\r\n        color: \"#9ad2ba\",\r\n        author: \"system\"\r\n      }\r\n    },\r\n    {\r\n      id: v4(),\r\n      name: \"tarefas\",\r\n      tasks: [],\r\n      metadata: {\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        tags: [],\r\n        icon: \"home\",\r\n        color: \"#788cde\",\r\n        author: \"system\"\r\n      }\r\n    }\r\n  ],\r\n  openSidebars: {\r\n    task: false,\r\n    list: true,\r\n  }\r\n}\r\n\r\nconst Context = React.createContext<ContextProps>({\r\n  globalDispatch() { },\r\n  globalState: globalInitialState\r\n})\r\n\r\n\r\ninterface GlobalProviderProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> { }\r\nconst GlobalProvider = React.forwardRef<HTMLDivElement, GlobalProviderProps>(({ children }, ref) => {\r\n  const [globalState, globalDispatch] = React.useReducer(globalReducer, globalInitialState)\r\n  return (\r\n    <SessionProvider>\r\n      <ThemeProvider\r\n        attribute=\"class\"\r\n        defaultTheme=\"system\"\r\n        enableSystem\r\n        disableTransitionOnChange\r\n      >\r\n        <Context.Provider value={{ globalState, globalDispatch }}>\r\n\r\n          {children}\r\n        </Context.Provider>\r\n      </ThemeProvider>\r\n    </SessionProvider>\r\n  )\r\n})\r\n\r\nGlobalProvider.displayName = \"GlobalProvider\"\r\n\r\nconst useGlobal = () => {\r\n  const context = React.useContext(Context)\r\n  if (!context) throw new Error(\"useGlobal must be inside GlobalProvider\")\r\n  return context\r\n}\r\n\r\nexport {\r\n  useGlobal,\r\n  GlobalProvider\r\n}","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\r\nimport { type ThemeProviderProps } from \"next-themes/dist/types\"\r\n\r\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\r\n}\r\n","import { List, GlobalActions, GlobalState, Task, Step } from \"./global.interface\"\r\n\r\nfunction addList(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"ADD_ELEMENT\") throw new Error()\r\n  return {\r\n    ...state,\r\n    lists: [\r\n      ...state.lists,\r\n      action.payload.element as List\r\n    ]\r\n  }\r\n}\r\n\r\nfunction addTask(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"ADD_ELEMENT\") throw new Error()\r\n  if (action.payload?.map.list)\r\n    return {\r\n      ...state,\r\n      lists: state.lists.map(list => {\r\n        if (list.id === action.payload.map.list) {\r\n          return {\r\n            ...list,\r\n            tasks: [...list.tasks, action.payload.element as Task]\r\n          }\r\n        }\r\n        return list\r\n      })\r\n    }\r\n  else return state\r\n}\r\n\r\nfunction addStep(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"ADD_ELEMENT\") throw new Error()\r\n  if (action.payload?.map.list)\r\n    return {\r\n      ...state,\r\n      lists: state.lists.map(list => {\r\n        if (list.id === action.payload.map.list) {\r\n          return {\r\n            ...list,\r\n            tasks: list.tasks.map(task => {\r\n              if (task.id === action.payload.map.task) {\r\n                return {\r\n                  ...task,\r\n                  steps: [...task.steps, action.payload.element as Step]\r\n                }\r\n              }\r\n              return task\r\n            })\r\n          }\r\n        }\r\n        return list\r\n      })\r\n    }\r\n  else return state\r\n}\r\n\r\n\r\nfunction addElement(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"ADD_ELEMENT\") throw new Error()\r\n  switch (action.payload.type) {\r\n    case \"list\":\r\n      return addList(state, action)\r\n    case \"task\":\r\n      return addTask(state, action)\r\n    case \"step\":\r\n      return addStep(state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction updateList(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"UPDATE_ELEMENT\") throw new Error()\r\n  return {\r\n    ...state,\r\n    lists: state.lists.map(list => {\r\n      if (list.id === action.payload.map.list) {\r\n        return {\r\n          ...list,\r\n          ...action.payload.element\r\n        }\r\n      }\r\n      return list\r\n    })\r\n  }\r\n}\r\n\r\nfunction updateTask(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"UPDATE_ELEMENT\") throw new Error()\r\n  if (action.payload?.map.list)\r\n    return {\r\n      ...state,\r\n      lists: state.lists.map(list => {\r\n        if (list.id === action.payload.map.list) {\r\n          return {\r\n            ...list,\r\n            tasks: list.tasks.map(task => {\r\n              if (task.id === action.payload.map.task) {\r\n                return {\r\n                  ...task,\r\n                  ...action.payload.element\r\n                }\r\n              }\r\n              return task\r\n            })\r\n          }\r\n        }\r\n        return list\r\n      })\r\n    }\r\n  else return state\r\n}\r\n\r\n\r\nfunction updateStep(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"UPDATE_ELEMENT\") throw new Error()\r\n  if (action.payload?.map.list)\r\n    return {\r\n      ...state,\r\n      lists: state.lists.map(list => {\r\n        if (list.id === action.payload.map.list) {\r\n          return {\r\n            ...list,\r\n            tasks: list.tasks.map(task => {\r\n              if (task.id === action.payload.map.task) {\r\n                return {\r\n                  ...task,\r\n                  steps: task.steps.map(step => {\r\n                    if (step.id === action.payload.map.step) {\r\n                      return {\r\n                        ...step,\r\n                        ...action.payload.element as Step\r\n                      }\r\n                    }\r\n                    return step\r\n                  })\r\n                }\r\n              }\r\n              return task\r\n            })\r\n          }\r\n        }\r\n        return list\r\n      })\r\n    }\r\n  else return state\r\n}\r\n\r\nfunction updateElement(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"UPDATE_ELEMENT\") throw new Error()\r\n  switch (action.payload.type) {\r\n    case \"list\":\r\n      return updateList(state, action)\r\n    case \"task\":\r\n      return updateTask(state, action)\r\n    case \"step\":\r\n      return updateStep(state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction deletelist(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"DELETE_ELEMENT\") throw new Error()\r\n  return {\r\n    ...state,\r\n    lists: state.lists.filter(list => list.id !== action.payload.map.list)\r\n  }\r\n}\r\n\r\nfunction deleteTask(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"DELETE_ELEMENT\") throw new Error()\r\n  if (action.payload?.map.task && action.payload.map.list)\r\n    return {\r\n      ...state,\r\n      lists: state.lists.map(list => {\r\n        if (list.id === action.payload.map.list) {\r\n          return {\r\n            ...list,\r\n            tasks: list.tasks.filter(task => task.id !== action.payload.map.task)\r\n          }\r\n        }\r\n        return list\r\n      })\r\n    }\r\n  else return state\r\n}\r\n\r\nfunction deleteStep(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"DELETE_ELEMENT\") throw new Error()\r\n  if (action.payload?.map.task && action.payload.map.list)\r\n    return {\r\n      ...state,\r\n      lists: state.lists.map(list => {\r\n        if (list.id === action.payload.map.list) {\r\n          return {\r\n            ...list,\r\n            tasks: list.tasks.map(task => {\r\n              if (task.id == action.payload.map.task) {\r\n                return {\r\n                  ...task,\r\n                  steps: task.steps.filter(step => step.id !== action.payload.map.step)\r\n                }\r\n              }\r\n              return task\r\n            })\r\n          }\r\n        }\r\n        return list\r\n      })\r\n    }\r\n  else return state\r\n}\r\n\r\n\r\nfunction deleteElement(state: GlobalState, action: GlobalActions): GlobalState {\r\n  if (action.type !== \"DELETE_ELEMENT\") throw new Error()\r\n  switch (action.payload.type) {\r\n    case \"list\":\r\n      return deletelist(state, action)\r\n    case \"task\":\r\n      return deleteTask(state, action)\r\n    case \"step\":\r\n      return deleteStep(state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport {\r\n  addElement,\r\n  updateElement,\r\n  deleteElement\r\n}","import { GlobalActions, GlobalState } from \"./global.interface\"\r\nimport { addElement, deleteElement, updateElement } from \"./global.snippets\"\r\n\r\n\r\nfunction globalReducer(\r\n  state: GlobalState,\r\n  action: GlobalActions,\r\n): GlobalState {\r\n  switch (action.type) {\r\n    case \"ADD_ELEMENT\":\r\n      return addElement(state, action)\r\n    case \"UPDATE_ELEMENT\":\r\n      return updateElement(state, action)\r\n    case \"DELETE_ELEMENT\":\r\n      return deleteElement(state, action)\r\n    case \"SELECT_ELEMENT\":\r\n      return {\r\n        ...state,\r\n        ...(action.payload.type == \"list\" && {\r\n          selectedList: action.payload.elementId,\r\n          selectedTask: undefined\r\n        }),\r\n        ...(action.payload.type == \"task\" && action.payload.parentId && {\r\n          selectedList: action.payload.parentId,\r\n          selectedTask: action.payload.elementId\r\n        }),\r\n      }\r\n    case \"DESELECT_ELEMENT\":\r\n      return {\r\n        ...state,\r\n        ...(action.payload.type == \"list\" && {\r\n          selectedList: undefined,\r\n          selectedTask: undefined\r\n        }),\r\n        ...(action.payload.type == \"task\" && {\r\n          selectedTask: undefined\r\n        })\r\n      }\r\n    case \"TOOGLE_SIDEBARS\":\r\n      return {\r\n        ...state,\r\n        openSidebars: {\r\n          ...state.openSidebars,\r\n          ...(action.payload.type == \"task\" && {\r\n            task: !state.openSidebars.task\r\n          }),\r\n          ...(action.payload.type == \"list\" && {\r\n            list: !state.openSidebars.list\r\n          })\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  globalReducer\r\n}","\"use client \"\r\n\r\nimport { Iconify } from \"@/components/ui/iconify\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { useGlobal } from \"@/provider/global\"\r\nimport { Div } from \"@/utils/interface\"\r\nimport clsx from \"clsx\"\r\nimport React from \"react\"\r\nimport { ListProps } from \"./list\"\r\n\r\ninterface ListItemProps extends Div {\r\n  active: boolean\r\n}\r\n\r\nconst ListItem = React.forwardRef<HTMLDivElement, ListItemProps>(({ className, active, ...props }, ref) => {\r\n  return <div\r\n    ref={ref}\r\n    className={clsx(\r\n      \"relative w-full flex items-center gap-4 p-2 hover:bg-neutral-300/10 cursor-pointer  text-sm rounded-sm select-none\",\r\n      className,\r\n      active && \"bg-neutral-300/20 hover:bg-neutral-300/20\"\r\n    )}\r\n    {...props}\r\n  >\r\n    {props.children}\r\n    <span className={\r\n      clsx(\r\n        \"absolute opacity-0 -left-1 rounded-l-sm w-1 h-5/6 bg-blue-300\",\r\n        active && \"!opacity-100\"\r\n      )\r\n    } />\r\n  </div>\r\n}\r\n)\r\nconst ListContent = React.forwardRef(({ author }: ListProps, ref) => {\r\n  const { globalState, globalDispatch } = useGlobal()\r\n  function selectList(listId: string) {\r\n    globalDispatch({\r\n      type: \"SELECT_ELEMENT\",\r\n      payload: {\r\n        type: \"list\",\r\n        elementId: listId\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <section className=\" w-full flex flex-col gap-1\" >\r\n      {\r\n        globalState.lists.filter(el => el.metadata.author === author).map(list => (\r\n          <ListItem\r\n            active={globalState.selectedList === list.id}\r\n            key={list.id}\r\n            onClick={() => selectList(list.id)}\r\n            className={cn(\r\n              globalState.selectedList === list.id\r\n            )}\r\n          >\r\n            <span className=\"w-10 flex justify-center \">\r\n\r\n              {\r\n                list.metadata?.icon &&\r\n                <Iconify\r\n                  iconName={list.metadata.icon}\r\n                  className=\"w-5 h-5 opacity-80 \"\r\n                  style={{ color: list.metadata.color }}\r\n                />\r\n              }\r\n            </span>\r\n            <div className=\"w-full flex justify-between\">\r\n              <p className=\"first-letter:capitalize text-sm\">\r\n                {list.name}\r\n              </p>\r\n              <p>\r\n                {list.tasks.length > 0 && list.tasks.length}\r\n              </p>\r\n            </div>\r\n          </ListItem>\r\n        ))\r\n      }\r\n    </section>\r\n  )\r\n})\r\nListItem.displayName = \"ListItem\"\r\nListContent.displayName = \"ListContent\"\r\nexport {\r\n  ListContent\r\n}","\"use client\"\r\nimport { ElementAuthor } from \"@/reducer\"\r\nimport { ListContent } from \"./list.content\"\r\nimport React from \"react\"\r\n\r\nexport type ListProps = {\r\n  author: ElementAuthor\r\n}\r\nconst List = React.forwardRef((props: ListProps, ref) => {\r\n  return <ListContent {...props} />\r\n})\r\n\r\nexport {\r\n  List\r\n}","import React from \"react\"\r\nimport { Appbar } from \"@/components/ui/appbar\"\r\nimport { Toolbar } from \"@/components/ui/toolbar\"\r\nimport { Perfil } from \"../perfil\"\r\nimport { List } from \"./list\"\r\nimport { SidebarContainer } from \"../sidebar.container\"\r\nimport { AddList } from \"./add.list\"\r\nimport { Stack } from \"@/components/ui\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\nimport { Signout } from \"../signout\"\r\n\r\n\r\nconst ListSidebar = React.forwardRef(({ }, ref) => {\r\n  return <SidebarContainer type=\"list\">\r\n    <Appbar\r\n      orientation={\"vertical\"}\r\n      className=\"relative !w-[280px] min-w-[280px] max-w-[280px] overflow-hidden\"\r\n    >\r\n      <ScrollArea className=\"relative max-h-[100vh] w-full h-full\">\r\n\r\n        <Toolbar className=\"sticky top-0 z-20 shadow bg-neutral-900  gap-4 h-fit w-full !flex-col !items-start !justify-start\">\r\n          <Perfil />\r\n          <List author=\"system\" />\r\n        </Toolbar>\r\n\r\n        <div className=\"h-[1px] w-full  select-none\" >\r\n          <div className=\"border-t  h-full w-full\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"w-full h-full flex\">\r\n          <AddList />\r\n        </div>\r\n\r\n        <Toolbar className=\"h-fit !flex-col !items-start !justify-start pt-1\">\r\n          <List author=\"user\" />\r\n        </Toolbar>\r\n\r\n\r\n      </ScrollArea> \r\n\r\n      <Stack items=\"center\" className=\"p-2 sticky bottom-0 h-12 bg-inherit border-t w-full\">\r\n        <Signout />\r\n      </Stack>\r\n\r\n    </Appbar>\r\n  </SidebarContainer>\r\n})\r\n\r\nListSidebar.displayName = \"ListSidebar\"\r\nexport {\r\n  ListSidebar\r\n}","import { Div } from \"@/utils/interface\"\r\nimport React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { type VariantProps, cva } from \"class-variance-authority\"\r\n\r\n\r\nconst appbarVariant = cva(\r\n  \"h-full flex items-center\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"\",\r\n        outline: \"border-b border-r\",\r\n      },\r\n      size: {\r\n        none: \"p-0\",\r\n        sm: \"px-2 py-1\",\r\n        md: \"px-3 py-2\",\r\n        lg: \"px-4 py-3\",\r\n        xl: \"px-6 py-4\"\r\n      },\r\n      orientation: {\r\n        vertical: \"!h-screen !w-fit !items-start !justify-start flex-col\",\r\n        horizontal: \"!w-screen !h-fit\"\r\n      },\r\n      defaultVariants: {\r\n        variant: \"default\",\r\n        size: \"md\"\r\n      }\r\n    }\r\n  }\r\n)\r\ninterface AppbarProps extends Div, VariantProps<typeof appbarVariant> { }\r\n\r\nconst Appbar = React.forwardRef<HTMLDivElement, AppbarProps>(\r\n  ({ variant = \"default\", size = \"none\", orientation = \"horizontal\", className, ...props }, ref) =>\r\n    <nav\r\n      ref={ref}\r\n      {...props}\r\n      className={\r\n        cn(appbarVariant({ variant, size, className, orientation }))\r\n      }\r\n    />\r\n)\r\n\r\nAppbar.displayName = \"Appbar\"\r\n\r\nexport { Appbar, appbarVariant }","import { cn } from \"@/lib/utils\"\r\nimport React from \"react\"\r\nimport { Stack } from \"./stack\"\r\nimport { Div } from \"@/utils/interface\"\r\n\r\nconst Toolbar = React.forwardRef<HTMLDivElement, Div>(({ className, ...props }, ref) =>\r\n  <Stack\r\n    ref={ref}\r\n    {...props}\r\n    className={\r\n      cn(\r\n        \"gap-1 w-full h-fit items-center justify-between p-2\",\r\n        className\r\n      )\r\n    }\r\n  />\r\n)\r\nToolbar.displayName = \"Toolbar\"\r\nexport { Toolbar }","import { cn } from \"@/lib/utils\"\r\nimport { Div } from \"@/utils/interface\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport React from \"react\"\r\n\r\nconst stackVariants = cva(\r\n  \"flex\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"flex select-none\"\r\n      },\r\n      direction: {\r\n        row: \"!flex-row\",\r\n        col: \"!flex-col\"\r\n      },\r\n      items: {\r\n        center: \"items-center\",\r\n        start: \"items-start\",\r\n        end: \"items-end\",\r\n      },\r\n      justify: {\r\n        between: \"justify-between\",\r\n        center: \"justify-center\",\r\n        start: 'justify-start'\r\n      },\r\n      defaultVariants: {\r\n        variant: \"default\",\r\n        direction: \"row\"\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\ninterface StackProps extends Div, VariantProps<typeof stackVariants> { }\r\n\r\nconst Stack = React.forwardRef<HTMLDivElement, StackProps>(({ className, items = \"start\", justify = \"start\", variant = \"default\", direction = \"row\", children, ...props }, ref) =>\r\n  <div\r\n    ref={ref}\r\n    {...props}\r\n    className={cn(\r\n      stackVariants({ direction, variant, items, justify, className }),\r\n    )}>\r\n    {\r\n      React.Children.toArray(children).map(child => child)\r\n    }\r\n  </div>\r\n)\r\n\r\n\r\nStack.displayName = \"Stack\"\r\nexport { Stack }","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-sm text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral-950 disabled:pointer-events-none disabled:opacity-50 dark:focus-visible:ring-neutral-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-neutral-900 text-neutral-50 shadow hover:bg-neutral-900/90 dark:bg-neutral-50 dark:text-neutral-900 dark:hover:bg-neutral-50/90\",\n        destructive:\n          \"bg-red-500 text-neutral-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-neutral-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-neutral-200 bg-white shadow-sm hover:bg-neutral-100 hover:text-neutral-900 dark:border-neutral-800 dark:bg-neutral-950 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        secondary:\n          \"bg-neutral-100 text-neutral-900 shadow-sm hover:bg-neutral-100/80 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-800/80\",\n        ghost: \"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        link: \"text-neutral-900 underline-offset-4 hover:underline dark:text-neutral-50\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-sm px-3 text-xs\",\n        lg: \"h-10 rounded-sm px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n  VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\n\nButton.displayName = \"Button\"\nexport { Button, buttonVariants }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-neutral-100 data-[state=open]:bg-neutral-100 dark:focus:bg-neutral-800 dark:data-[state=open]:bg-neutral-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-sm border border-neutral-200 bg-white p-1 text-neutral-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-sm border border-neutral-200 bg-white p-1 text-neutral-950 shadow-md dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-neutral-100 focus:text-neutral-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-neutral-100 focus:text-neutral-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-neutral-100 focus:text-neutral-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-neutral-100 dark:bg-neutral-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n","import clsx from \"clsx\"\r\nimport { Circle, Plus } from \"lucide-react\"\r\nimport React from \"react\"\r\n\r\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  color?: string\r\n  callback: (value: string) => void\r\n  variant?: \"default\" | \"ghost\"\r\n}\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(({ color, callback, variant, ...props }, ref) => {\r\n  const [value, setValue] = React.useState<string>(\"\")\r\n  const [active, setActive] = React.useState<boolean>(false)\r\n  function handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const newValue = e.target.value\r\n    if (newValue == undefined) return null\r\n    setValue(newValue)\r\n  }\r\n\r\n  function handleEnterPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    if (e.code !== \"Enter\" && (e.code !== \"NumpadEnter\")) return null\r\n    callback(value)\r\n    setValue(\"\")\r\n  }\r\n  return <div\r\n    className={clsx(\r\n      \"w-full h-full flex  bg-neutral-900 rounded-sm cursor-text hover:bg-neutral-800 active:bg-neutral-800\",\r\n      variant == \"ghost\" && \"bg-transparent\"\r\n    )}\r\n    style={{\r\n      color: color,\r\n    }}\r\n  >\r\n    <label\r\n      htmlFor=\"input\"\r\n      className={clsx(\"flex gap-2 py-4 w-full h-full  select-none\")}\r\n    >\r\n\r\n      <span className=\"w-10 flex items-center justify-center select-none \">\r\n        {active\r\n          ? <Circle className=\"w-5 h-5 \" style={{ color: color }} />\r\n          : <Plus className=\"w-5 h-5 \" style={{ color: color }} />\r\n        }\r\n      </span>\r\n\r\n      <input\r\n        ref={ref}\r\n        {...props}\r\n        onKeyDown={handleEnterPress}\r\n        type=\"text\"\r\n        value={value}\r\n        style={{ color: color }}\r\n        onClick={() => setActive(true)}\r\n        onBlur={() => setActive(false)}\r\n        onChange={handleInputChange}\r\n        id=\"input\"\r\n        className=\"outline-none text-sm bg-transparent select-none w-full h-full\"\r\n        placeholder={`inserir ${props.name ?? \"\"}`}\r\n      />\r\n    </label>\r\n  </div>\r\n})\r\n\r\nInput.displayName = \"Input\"\r\nexport { Input }","\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-neutral-100 dark:bg-neutral-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","import { DropdownMenuItem, Stack } from \"@/components/ui\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuTrigger\r\n} from \"@/components\"\r\nimport { RefreshCcw, Settings } from \"lucide-react\"\r\nimport { Dialog, DialogContent, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport { getServerSession } from \"next-auth\"\r\nimport React from \"react\"\r\n\r\n\r\nconst PerfilAvatar = React.memo(({ image, name }: { image: string, name: string }) => {\r\n  return (\r\n    <Avatar className=\"w-10 h-10 shadow-md\">\r\n      <AvatarImage src={image ?? \"\"} alt={name ?? \"\"} />\r\n      <AvatarFallback >{(name ?? \"\")[0]}</AvatarFallback>\r\n    </Avatar>\r\n  )\r\n})\r\nPerfilAvatar.displayName = \"PerfilAvatar\"\r\nconst Perfil = React.forwardRef(async () => {\r\n  const user = await getServerSession()\r\n  if (!user) return null\r\n\r\n  return (\r\n    <section className=\" w-full px-2 pt-3 h-12 flex\">\r\n      <Dialog >\r\n        <DropdownMenu  >\r\n          <DropdownMenuTrigger >\r\n            <Stack direction={\"row\"} className=\"flex-nowrap gap-2 select-none w-full\">\r\n              <span>\r\n                <PerfilAvatar\r\n                  image={user.user?.image ?? \"\"}\r\n                  name={user.user?.name ?? \"\"}\r\n                />\r\n              </span>\r\n              <Stack direction={\"col\"} >\r\n                <span className=\"text-sm text-left leading-4 tracking-tight line-clamp-1\">{user.user?.name}</span>\r\n                <span className=\"text-xs\">{user.user?.email}</span>\r\n              </Stack>\r\n            </Stack>\r\n          </DropdownMenuTrigger>\r\n\r\n          <DropdownMenuContent className=\"w-60\">\r\n\r\n            <DialogTrigger className=\"w-full\">\r\n              <DropdownMenuItem className=\"w-full gap-2  cursor-pointer\">\r\n                <Settings className=\"w-4 h-4 opacity-50 \" /> gerenciar perfil\r\n              </DropdownMenuItem>\r\n            </DialogTrigger>\r\n\r\n            <DropdownMenuItem className=\"gap-2  cursor-pointer\">\r\n              <RefreshCcw className=\"w-4 h-4 opacity-50 \" /> sincronizar\r\n            </DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu >\r\n\r\n\r\n        <DialogContent className=\"select-none\">\r\n          aqui\r\n        </DialogContent>\r\n      </Dialog>\r\n    </section>\r\n  )\r\n})\r\n\r\nPerfil.displayName = \"Perfil\"\r\nexport { Perfil }","\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-neutral-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-sm dark:border-neutral-800 dark:bg-neutral-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-neutral-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-neutral-100 data-[state=open]:text-neutral-500 dark:ring-offset-neutral-950 dark:focus:ring-neutral-300 dark:data-[state=open]:bg-neutral-800 dark:data-[state=open]:text-neutral-400\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-neutral-500 dark:text-neutral-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","\"use client\"\r\nimport { useGlobal } from \"@/provider/global\"\r\nimport { ElementType } from \"@/reducer\"\r\nimport React from \"react\"\r\n\r\ninterface SidebarContainer extends React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLElement>, HTMLElement> {\r\n  type: ElementType\r\n}\r\n\r\nconst SidebarContainer = React.forwardRef<HTMLElement, SidebarContainer>(({ children, type }, ref) => {\r\n  const { globalState } = useGlobal()\r\n  if (type == \"step\") return null\r\n  if (!globalState.openSidebars[type]) return null\r\n  return children\r\n}\r\n)\r\nSidebarContainer.displayName = \"SidebarContainer\"\r\nexport {\r\n  SidebarContainer\r\n}","\"use client\"\r\nimport { Stack } from \"@/components/ui\"\r\nimport { useGlobal } from \"@/provider/global\"\r\nimport { List } from \"@/reducer\"\r\nimport clsx from \"clsx\"\r\nimport { Plus } from \"lucide-react\"\r\nimport React from \"react\"\r\nimport { v4 } from \"uuid\"\r\n\r\nconst AddList = () => {\r\n  const { globalDispatch } = useGlobal()\r\n  const [value, setValue] = React.useState<string>(\"\")\r\n  const [active, setActive] = React.useState<boolean>(false)\r\n\r\n  function submit() {\r\n    if (value.trim() === \"\" || value === undefined) return null\r\n\r\n    const newList: List = {\r\n      id: v4(),\r\n      name: value,\r\n      tasks: [],\r\n      metadata: {\r\n        tags: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        icon: \"list\",\r\n        author: \"user\"\r\n      }\r\n    }\r\n    globalDispatch({\r\n      type: \"ADD_ELEMENT\",\r\n      payload: {\r\n        type: \"list\",\r\n        element: newList,\r\n        map: {}\r\n      }\r\n    })\r\n  }\r\n\r\n  function handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const newValue = e.target.value\r\n    if (newValue == undefined) return null\r\n    setValue(newValue)\r\n  }\r\n\r\n  function handleEnterPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    if (e.code !== \"Enter\" && (e.code !== \"NumpadEnter\")) return null\r\n    submit()\r\n    setValue(\"\")\r\n  }\r\n  return (\r\n    <Stack direction={\"row\"} className=\"w-full h-fit \">\r\n\r\n      <label\r\n        htmlFor=\"addList\"\r\n        className={clsx(\"flex gap-3 px-3 py-2 w-full  hover:bg-blue-600/20 select-none\", [active && \"bg-blue-600/20\"])}\r\n      >\r\n        <span className=\"w-10  flex items-center justify-center select-none \">\r\n          <Plus className=\"w-5 h-5 text-blue-300\" />\r\n        </span>\r\n        <input\r\n          onKeyDown={handleEnterPress}\r\n          type=\"text\"\r\n          value={value}\r\n          onClick={() => setActive(true)}\r\n          onBlur={() => setActive(false)}\r\n          onChange={handleInputChange}\r\n          id=\"addList\"\r\n          className=\"outline-none text-blue-300 text-sm bg-transparent select-none first-letter:!capitalize\"\r\n          placeholder=\"inserir lista\" />\r\n      </label>\r\n\r\n      {/* <Button className=\"rounded-none\" variant=\"ghost\">\r\n        <Group />\r\n      </Button> */}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nAddList.displayName = \"AddList\"\r\nexport { AddList }","\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors z-50\",\n      orientation === \"vertical\" &&\n      \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n      \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-neutral-200 dark:bg-neutral-800\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","\"use client\"\r\nimport { LucideDoorOpen } from \"lucide-react\";\r\nimport { Button } from \"../ui\";\r\nimport { signOut } from \"next-auth/react\"\r\nimport React from \"react\";\r\n\r\nconst Signout = React.forwardRef(() => {\r\n  return (\r\n    <Button\r\n      variant=\"ghost\"\r\n      className=\"px-2 rounded-full\"\r\n      size={\"icon\"}\r\n      onClick={() => {\r\n        signOut()\r\n      }}\r\n    >\r\n      <LucideDoorOpen className=\"w-5 h-5\" />\r\n    </Button>\r\n  )\r\n})\r\n\r\nSignout.displayName = \"Signout\"\r\nexport { Signout }","\"use client\"\r\n\r\nimport { Button, Input, Stack } from \"@/components/ui\"\r\nimport { Iconify } from \"@/components/ui/iconify\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\nimport { useGlobal } from \"@/provider/global\"\r\nimport { Step, Task } from \"@/reducer\"\r\nimport { Div } from \"@/utils/interface\"\r\nimport clsx from \"clsx\"\r\nimport { Circle, CircleCheckBigIcon, Menu, X } from \"lucide-react\"\r\nimport React from \"react\"\r\nimport { AddTask } from \"./add.task\"\r\nimport { EditableText } from \"../Editable.text\"\r\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\"\r\nimport { v4 } from \"uuid\"\r\n\r\ninterface CheckerProps extends Div {\r\n  active?: boolean\r\n}\r\n\r\nconst Checker = React.forwardRef<HTMLDivElement, CheckerProps>(({ active, className, onClick, ...props }, ref) => {\r\n  const [mouseEnter, setMouseEnter] = React.useState<boolean>(false)\r\n\r\n  return (\r\n    <Stack className={clsx(\"w-full h-full gap-2\", className)} ref={ref} {...props}>\r\n      <div\r\n        className={clsx(\"w-10 h-full  flex items-center justify-center cursor-pointer\")}\r\n        onClick={(e) => onClick && onClick(e as React.MouseEvent<HTMLDivElement, MouseEvent>)}\r\n        onMouseEnter={() => setMouseEnter(true)}\r\n        onMouseLeave={() => setMouseEnter(false)}\r\n      >\r\n        {mouseEnter || active\r\n          ? <CircleCheckBigIcon className={\"w-5 h-5\"} />\r\n          : <Circle className=\"w-5 h-5\" />\r\n        }\r\n      </div>\r\n      {props.children}\r\n    </Stack>\r\n  )\r\n})\r\n\r\nChecker.displayName = \"Checker\"\r\ninterface TaskItemProps extends Div {\r\n  task?: Task\r\n  active?: boolean\r\n  editable?: boolean\r\n  dense?: boolean\r\n}\r\n\r\nconst TaskItem = React.forwardRef<HTMLDivElement, TaskItemProps>(({\r\n  task,\r\n  active = false,\r\n  editable,\r\n  dense = false,\r\n  ...props\r\n}, ref) => {\r\n  const { globalDispatch } = useGlobal()\r\n  if (!task) return <div className=\"w-full h-16 border-b\" />\r\n\r\n  function toogleTaskstatus(e: React.MouseEvent<HTMLSpanElement, MouseEvent>) {\r\n    e.stopPropagation()\r\n    if (!task) return null\r\n\r\n    globalDispatch({\r\n      type: \"UPDATE_ELEMENT\",\r\n      payload: {\r\n        element: {\r\n          ...task,\r\n          status: task.status == \"DONE\" ? \"TODO\" : \"DONE\"\r\n        },\r\n        map: {\r\n          list: task?.parent,\r\n          task: task?.id,\r\n        },\r\n        type: \"task\",\r\n      }\r\n    })\r\n  }\r\n\r\n  function toogleStepstatus(step: Step) {\r\n    if (!task) return null\r\n\r\n    globalDispatch({\r\n      type: \"UPDATE_ELEMENT\",\r\n      payload: {\r\n        element: {\r\n          ...step,\r\n          status: step.status == \"DONE\" ? \"TODO\" : \"DONE\"\r\n        },\r\n        map: {\r\n          list: task?.parent,\r\n          task: task?.id,\r\n          step: step.id\r\n        },\r\n        type: \"step\",\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  function renameTask(title: string) {\r\n    if (!task) return null\r\n\r\n    globalDispatch({\r\n      type: \"UPDATE_ELEMENT\",\r\n      payload: {\r\n        element: {\r\n          ...task,\r\n          name: title\r\n        } as Task,\r\n        type: \"task\",\r\n        map: {\r\n          list: task?.parent,\r\n          task: task.id\r\n        },\r\n      }\r\n    })\r\n  }\r\n\r\n  function addStep(name: string) {\r\n    if (!task) return null\r\n    if (name.trim() == \"\") return null\r\n    globalDispatch({\r\n      type: \"ADD_ELEMENT\",\r\n      payload: {\r\n        type: \"step\",\r\n        map: {\r\n          list: task.parent,\r\n          task: task.id\r\n        },\r\n        element: {\r\n          id: v4(),\r\n          name,\r\n          status: \"TODO\"\r\n        } as Step\r\n      }\r\n    })\r\n  }\r\n\r\n  function renameStep(name: string, step: Step) {\r\n    if (!task) return null\r\n    globalDispatch({\r\n      type: \"UPDATE_ELEMENT\",\r\n      payload: {\r\n        type: \"step\",\r\n        map: {\r\n          list: task.parent,\r\n          task: task.id,\r\n          step: step.id\r\n        },\r\n        element: {\r\n          ...step,\r\n          name,\r\n        } as Step\r\n      }\r\n    })\r\n  }\r\n\r\n  function deleteStep(stepId: string) {\r\n    if (!task) return null\r\n    globalDispatch({\r\n      type: \"DELETE_ELEMENT\",\r\n      payload: {\r\n        type: \"step\",\r\n        map: {\r\n          list: task.parent,\r\n          task: task.id,\r\n          step: stepId\r\n        },\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Stack\r\n      ref={ref}\r\n      className={clsx(\"group/taskItem h-16 bg-neutral-900 rounded-md\", [active && \"border-transparent\"], [!dense && \"!h-fit \"])}\r\n    >\r\n      <Stack\r\n        direction={\"col\"}\r\n        key={task.id}\r\n        {...props}\r\n        className={clsx(\r\n          \"h-full w-full gap-2 group-hover/taskItem:bg-neutral-800 transition-all rounded-md cursor-pointer\",\r\n          [!dense && active && \"!bg-neutral-800 group-hover/taskItem:bg-neutral-900 \"],\r\n          [!dense && \"px-2 py-4 !bg-neutral-800 group-hover/taskItem:bg-transparent cursor-default\"]\r\n        )}\r\n      >\r\n        <Checker onClick={toogleTaskstatus} active={task.status == \"DONE\"}>\r\n          <Stack direction={\"col\"} justify={\"center\"} className={clsx(\" h-full w-full\")}>\r\n            <EditableText\r\n              value={task.name}\r\n              callback={renameTask}\r\n              contentEditable={!!editable}\r\n              className={clsx(\"min-w-32 line-clamp-1 max-w-48 text-neutral-300\", task.status == \"DONE\" && \"line-through\", [dense && \"max-w-full\"])}\r\n            />\r\n\r\n            <div className=\"flex flex-row w-full whitespace-nowrap pr-2 text-neutral-500\">\r\n              {\r\n                task.steps.length > 0 && <div className=\"w-full text-xs leading-3\">\r\n                  {task.steps.filter(el => el.status == \"DONE\").length} de {task.steps.length}\r\n                </div>\r\n              }\r\n              <p className=\"text-xs leading-3\">\r\n                {task.metadata.updatedAt.toLocaleString()}\r\n              </p>\r\n            </div>\r\n          </Stack>\r\n        </Checker>\r\n\r\n        {\r\n          !dense\r\n          && <section className=\"w-full flex flex-col gap-1\">\r\n            {\r\n              task.steps.map(step => (\r\n                <Checker key={v4()} className=\"-ml-1 px-2 items-center border-b border-neutral-600 py-1 w-full \" active={step.status == \"DONE\"} onClick={(e) => {\r\n                  e.stopPropagation()\r\n                  toogleStepstatus(step)\r\n                }}>\r\n                  <EditableText\r\n                    value={step.name}\r\n                    callback={(name) => renameStep(name, step)}\r\n                    className=\"h-full w-full max-w-[80%] line-clamp-1 \"\r\n                  />\r\n                  <Button variant={\"ghost\"} className=\"rounded-full px-2\" size={\"icon\"} onClick={() => deleteStep(step.id)}>\r\n                    <X className=\"w-5 h-5\" />\r\n                  </Button>\r\n                </Checker>\r\n              ))\r\n            }\r\n            <Input\r\n              name=\"etapa\"\r\n              variant=\"ghost\"\r\n              callback={addStep}\r\n            />\r\n          </section>\r\n\r\n        }\r\n      </Stack>\r\n\r\n    </Stack>\r\n  )\r\n})\r\n\r\nTaskItem.displayName = \"TaskItem\"\r\n\r\nconst TaskList = React.forwardRef(({ }, ref) => {\r\n  const { globalState, globalDispatch } = useGlobal()\r\n\r\n  function selectTask(taskId: string) {\r\n    if (\r\n      (!globalState.selectedTask || globalState.selectedTask == taskId) ||\r\n      (globalState.selectedTask !== taskId && !globalState.openSidebars.task)\r\n    ) {\r\n      globalDispatch({\r\n        type: \"TOOGLE_SIDEBARS\",\r\n        payload: {\r\n          type: \"task\"\r\n        }\r\n      })\r\n    }\r\n\r\n    globalDispatch({\r\n      type: \"SELECT_ELEMENT\",\r\n      payload: {\r\n        type: \"task\",\r\n        parentId: globalState.selectedList,\r\n        elementId: taskId\r\n      }\r\n    })\r\n  }\r\n\r\n  function closeListSidebar() {\r\n    globalDispatch({\r\n      type: \"TOOGLE_SIDEBARS\",\r\n      payload: {\r\n        type: \"list\"\r\n      }\r\n    })\r\n  }\r\n\r\n  const list = globalState.lists.find(list => list.id === globalState.selectedList)\r\n  if (!list) return null\r\n  function renameList(name: string) {\r\n    if (!list || list.metadata.author == \"system\") return null\r\n    globalDispatch({\r\n      type: \"UPDATE_ELEMENT\",\r\n      payload: {\r\n        type: \"list\",\r\n        map: {\r\n          list: list.id\r\n        },\r\n        element: {\r\n          ...list,\r\n          name\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className=\"relative flex flex-col max-h-screen h-screen overflow-hidden gap-4\">\r\n      {\r\n        globalState.selectedList &&\r\n        <section className=\"pt-5 px-4 flex gap-2 w-full\">\r\n          <span className=\"w-10 flex items-center justify-center\">\r\n            <Button variant={\"outline\"} size=\"icon\" onClick={closeListSidebar}>\r\n              <Menu className=\"w-4 h-4\" />\r\n            </Button>\r\n          </span>\r\n\r\n          <Stack\r\n            items={\"center\"}\r\n            key={list.id}\r\n            style={{ color: list.metadata.color }}\r\n            className=\"gap-2 h-9\"\r\n          >\r\n            <span className=\"w-10 flex items-center justify-center\">\r\n              {list.metadata.icon\r\n                && <Iconify\r\n                  iconName={list.metadata.icon}\r\n\r\n                />}\r\n            </span>\r\n\r\n            <EditableText\r\n              callback={renameList}\r\n              value={list.name}\r\n              className={clsx(\"text-xl first-letter:capitalize min-w-64\")}\r\n              contentEditable={list.metadata.author !== \"system\"}\r\n            />\r\n          </Stack>\r\n\r\n          </section>\r\n\r\n      }\r\n      <ScrollArea className=\"relative flex flex-col max-h-screen px-4\">\r\n        {\r\n          globalState.selectedList\r\n          && (\r\n            <div className=\"flex flex-col gap-1 pb-8\">\r\n              <AddTask />\r\n              {\r\n                list.tasks\r\n                  .sort((a, b) => new Date(b.metadata.updatedAt ?? new Date()).getTime() - new Date(a.metadata.updatedAt ?? new Date()).getTime())\r\n                  .filter(el => el.status !== \"DONE\")\r\n                  .map(task => (\r\n                    <TaskItem\r\n                      dense\r\n                      onClick={() => selectTask(task.id)}\r\n                      key={task.id}\r\n                      active={task.id === globalState.selectedTask}\r\n                      task={task}\r\n                    />\r\n                  ))\r\n              }\r\n\r\n\r\n              <Accordion type=\"multiple\" defaultValue={[]}>\r\n                {list.tasks.filter(el => el.status === \"DONE\").length > 0 &&\r\n                  <AccordionItem value=\"DONE\">\r\n                    <AccordionTrigger>concluída ({list.tasks.filter(el => el.status === \"DONE\").length})</AccordionTrigger>\r\n                    <AccordionContent className=\"flex flex-col gap-1 w-full\">\r\n                      {\r\n                        list.tasks\r\n                          .sort((a, b) => new Date(b.metadata.updatedAt ?? new Date()).getTime() - new Date(a.metadata.updatedAt ?? new Date()).getTime())\r\n                          .filter(el => el.status === \"DONE\")\r\n                          .map(task => (\r\n                            <TaskItem\r\n                              dense\r\n                              onClick={() => selectTask(task.id)}\r\n                              key={task.id}\r\n                              active={task.id === globalState.selectedTask}\r\n                              task={task}\r\n                            />\r\n                          ))\r\n                      }\r\n                    </AccordionContent>\r\n                  </AccordionItem>\r\n                }\r\n\r\n              </Accordion>\r\n            </div>)\r\n        }\r\n\r\n\r\n      </ScrollArea>\r\n    </section>\r\n  )\r\n})\r\n\r\n\r\nTaskList.displayName = \"TaskList\"\r\nexport { TaskList, TaskItem }","\"use client\"\r\nimport { Input } from \"@/components/ui\"\r\nimport { useGlobal } from \"@/provider/global\"\r\nimport { Task } from \"@/reducer\"\r\nimport React from \"react\"\r\nimport { v4 } from \"uuid\"\r\n\r\nconst AddTask = React.forwardRef(({ }, ref) => {\r\n  const { globalState, globalDispatch } = useGlobal()\r\n\r\n\r\n  const list = globalState.lists.find(collection => collection.id === globalState.selectedList)\r\n  if (!list) return null\r\n\r\n  function submit(name: string) {\r\n    if (!list) return null\r\n    if (name.trim() === \"\" || name === undefined) return null\r\n\r\n    const newTask: Task = {\r\n      id: v4(),\r\n      name: name,\r\n      metadata: {\r\n        tags: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        icon: \"list\",\r\n        author: \"user\"\r\n      },\r\n      description: \"\",\r\n      parent: list.id,\r\n      status: \"TODO\",\r\n      steps: []\r\n    }\r\n\r\n    globalDispatch({\r\n      type: \"ADD_ELEMENT\",\r\n      payload: {\r\n        type: \"task\",\r\n        element: newTask,\r\n        map: {\r\n          list: list.id,\r\n          task: newTask.id\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return <Input\r\n    callback={submit} color={list.metadata.color ?? \"\"} name=\"tarefa\" />\r\n})\r\n\r\n\r\nexport {\r\n  AddTask\r\n}","\"use client\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport React from \"react\"\r\n\r\ninterface EditableTextProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement> {\r\n  callback: (value: string) => void\r\n  value: string\r\n}\r\n\r\nconst EditableText = React.forwardRef<HTMLParagraphElement, EditableTextProps>(({\r\n  contentEditable,\r\n  callback,\r\n  value,\r\n  children,\r\n  className,\r\n  ...props\r\n}, ref) => {\r\n\r\n  function handleOnBlur(e: React.FocusEvent<HTMLParagraphElement, Element>) {\r\n    const innerText = e.target.innerText\r\n    const newValue = innerText == undefined || innerText.trim() == \"\" ? value : innerText\r\n    callback(newValue)\r\n  }\r\n\r\n  return (\r\n    <p\r\n      contentEditable={contentEditable != undefined ? contentEditable : true}\r\n      onBlur={handleOnBlur}\r\n      {...props}\r\n      ref={ref}\r\n      dangerouslySetInnerHTML={{\r\n        __html: value\r\n      }}\r\n      className={cn([contentEditable !== false && \"cursor-text\"], className)}\r\n    />\r\n  )\r\n})\r\n\r\n\r\nEditableText.displayName = \"EditableText\"\r\nexport {\r\n  EditableText\r\n}","\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDownIcon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center gap-2 py-4 text-sm font-medium transition-all hover:underline [&[data-state=open]>span>svg]:rotate-90\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"w-10 flex items-center justify-center\">\n        <ChevronRightIcon className=\"h-5 w-5 shrink-0 text-neutral-500 transition-transform duration-200 dark:text-neutral-400\" />\n      </span>\n      {children}\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","\"use client\"\r\n\r\nimport { TaskList } from \"./list\"\r\n\r\nconst TaskContainer = () => {\r\n  return <TaskList />\r\n}\r\n\r\nTaskContainer.displayName = \"TaskContainer\"\r\nexport { TaskContainer }","\"use client\"\r\nimport { Button } from \"@/components/ui\"\r\nimport { Appbar } from \"@/components/ui/appbar\"\r\nimport { Toolbar } from \"@/components/ui/toolbar\"\r\nimport { useGlobal } from \"@/provider/global\"\r\nimport { SidebarClose, Trash } from \"lucide-react\"\r\nimport { SidebarContainer } from \"../sidebar.container\"\r\nimport { TaskItem } from \"./list\"\r\nimport React from \"react\"\r\n\r\nconst TaskSidebar = React.forwardRef(() => {\r\n  const { globalState, globalDispatch } = useGlobal()\r\n\r\n  function closeTaskSidebar() {\r\n    globalDispatch({\r\n      type: \"TOOGLE_SIDEBARS\",\r\n      payload: {\r\n        type: \"task\"\r\n      }\r\n    })\r\n  }\r\n\r\n  function deleteTask() {\r\n    if (globalState.selectedTask && globalState.selectedList) {\r\n      globalDispatch({\r\n        type: \"DELETE_ELEMENT\",\r\n        payload: {\r\n          type: \"task\",\r\n          map: {\r\n            task: globalState.selectedTask,\r\n            list: globalState.selectedList,\r\n          }\r\n        }\r\n      })\r\n\r\n      globalDispatch({\r\n        type: \"DESELECT_ELEMENT\",\r\n        payload: {\r\n          type: \"task\"\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!globalState.selectedTask) return null\r\n  const collection = globalState.lists.find(list => list.id === globalState.selectedList)\r\n  const task = collection?.tasks.find(task => task.id == globalState.selectedTask)\r\n  if (!task) return null\r\n  return (\r\n    <SidebarContainer type=\"task\">\r\n      <Appbar\r\n        orientation={\"vertical\"}\r\n        className=\"relative !w-[280px] min-w-[280px] max-w-[280px] justify-center overflow-hidden \"\r\n      >\r\n        <Toolbar className=\"gap-4 py w-full h-full flex !flex-col justify-between items-start\">\r\n          <section className=\"w-full h-full\">\r\n            <div className=\"pt-3\">\r\n              <TaskItem task={task} editable />\r\n            </div>\r\n          </section>\r\n\r\n        </Toolbar>\r\n\r\n        <div className=\"flex items-center justify-between w-full border-t p-2\">\r\n\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            className=\"rounded-full\"\r\n            onClick={closeTaskSidebar}\r\n          >\r\n            <SidebarClose className=\"w-5 h-5 -scale-x-100\" />\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            className=\"rounded-full\"\r\n            onClick={deleteTask}\r\n          >\r\n            <Trash className=\"w-5 h-5\" />\r\n          </Button>\r\n\r\n        </div>\r\n      </Appbar>\r\n    </SidebarContainer>\r\n  )\r\n})\r\n\r\n\r\nTaskSidebar.displayName = \"TaskSidebar\"\r\n\r\n\r\nexport {\r\n  TaskSidebar\r\n}"],"mappings":"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","names":["import_react","import_clsx","React","import_react","React","NextThemesProvider","import_react","React","import_clsx","import_react","React","clsx","import_react","List","React","import_react","import_react","React","import_react","import_class_variance_authority","import_react","React","React","React","import_class_variance_authority","React","import_next_themes","import_clsx","import_lucide_react","import_react","React","clsx","React","import_lucide_react","React","import_react_icons","import_react","React","import_react","React","import_clsx","import_lucide_react","import_react","import_uuid","React","clsx","React","import_lucide_react","import_react","React","React","List","import_clsx","import_lucide_react","import_react","import_react","import_uuid","React","import_react","React","React","import_lucide_react","import_uuid","React","clsx","addStep","deleteStep","list","import_lucide_react","import_react","React","deleteTask","task","React","clsx"]}